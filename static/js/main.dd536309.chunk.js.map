{"version":3,"sources":["Components/Searchbar/Searchbar.js","Components/ImageGallery/ImageGallery.js","Components/ImageGalleryItem/ImageGalleryItem.js","service/pixabay.js","Components/Button/Button.js","Components/Modal/Modal.js","Components/pixabayGallery/ImagesList.js","App.js","index.js"],"names":["Searchbar","state","searchValue","handleSearchSubmit","e","preventDefault","console","log","props","getSearchValue","handleSearchChange","setState","target","value","this","className","onSubmit","type","autoComplete","autoFocus","placeholder","onChange","Component","ImageGallery","children","ImageGalleryItem","searchResults","openModal","map","id","webformatURL","tags","onClick","src","alt","propType","PropTypes","arrayOf","string","isRequired","number","func","PixabayFetch","BASE_URL","API_KEY","_searchQuery","_page","perPage","urlWithKey","a","searchQuery","page","params","url","axios","get","result","data","hits","Button","modalRoot","document","querySelector","Modal","handleKeyDown","code","onClose","handleBackdropClick","event","currentTarget","window","addEventListener","removeEventListener","createPortal","newPixabayFetch","ImagesList","status","largeImageId","isModalOpen","handleClick","searchPhotos","then","prev","scrollTo","top","documentElement","scrollHeight","behavior","catch","err","findImg","find","Number","closeModal","prevProps","prevState","resetPage","paramLoadMore","length","color","height","width","timeout","largeImageURL","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.dd536309.chunk.js","sourcesContent":["import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nclass Searchbar extends Component {\r\n  state = {\r\n    searchValue: '',\r\n  };\r\n  static propTypes = {\r\n    getSearchValue: PropTypes.func.isRequired,\r\n  };\r\n  handleSearchSubmit = e => {\r\n    const { searchValue } = this.state;\r\n    e.preventDefault();\r\n    console.log('Before fetch:', searchValue);\r\n    this.props.getSearchValue(searchValue);\r\n  };\r\n  handleSearchChange = e => {\r\n    this.setState({ searchValue: e.target.value });\r\n  };\r\n  render() {\r\n    const { handleSearchSubmit, handleSearchChange } = this;\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form onSubmit={handleSearchSubmit} className=\"SearchForm\">\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            onChange={handleSearchChange}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\nexport default Searchbar;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ImageGallery = ({ children }) => {\r\n  return <ul className=\"ImageGallery\">{children}</ul>;\r\n};\r\nexport default ImageGallery;\r\n\r\nImageGallery.propTypes = {\r\n  children: PropTypes.any.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ImageGalleryItem = ({ searchResults, openModal }) => {\r\n  return (\r\n    <>\r\n      {searchResults.map(({ id, webformatURL, tags }) => (\r\n        <li key={id} id={id} onClick={openModal} className=\"ImageGalleryItem\">\r\n          <img\r\n            src={webformatURL}\r\n            alt={tags}\r\n            className=\"ImageGalleryItem-image\"\r\n          />\r\n        </li>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\nexport default ImageGalleryItem;\r\n\r\nImageGalleryItem.propType = {\r\n  searchResults: PropTypes.arrayOf({\r\n    webformatURL: PropTypes.string.isRequired,\r\n    tags: PropTypes.string,\r\n    id: PropTypes.number,\r\n  }),\r\n  openModal: PropTypes.func.isRequired,\r\n};\r\n","import axios from 'axios';\r\n\r\nexport class PixabayFetch {\r\n  constructor(BASE_URL, API_KEY) {\r\n    this.BASE_URL = BASE_URL;\r\n    this.API_KEY = API_KEY;\r\n    this._searchQuery = '';\r\n    this._page = 1;\r\n    this.perPage = 12;\r\n    this.urlWithKey = '';\r\n  }\r\n  get searchQuery() {\r\n    return this._searchQuery;\r\n  }\r\n  set searchQuery(value) {\r\n    return (this._searchQuery = value);\r\n  }\r\n  get page() {\r\n    return this._page;\r\n  }\r\n  set page(value) {\r\n    return (this._page += value);\r\n  }\r\n  resetPage() {\r\n    return (this._page = 1);\r\n  }\r\n  async searchPhotos() {\r\n    this.urlWithKey = this.BASE_URL + `?key=${this.API_KEY}`;\r\n    console.log(this.searchQuery, this.page);\r\n    let params = `&q=${this._searchQuery}&page=${this.page}&per_page=${this.perPage}`;\r\n    let url = this.urlWithKey + params;\r\n    try {\r\n      const result = await axios.get(url);\r\n      const data = result.data.hits;\r\n      return data;\r\n    } catch (err) {\r\n      return console.log(err);\r\n    }\r\n    //   return axios\r\n    //     .get(url)\r\n    //     .then(result => result.data)\r\n    //     .then(data => {\r\n    //       // console.log(data.hits);\r\n    //       return data.hits;\r\n    //     })\r\n    //     .catch(err => console.log(err));\r\n  }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Button = ({ onClick }) => {\r\n  return (\r\n    <>\r\n      <button className=\"btn-load\" type=\"button\" onClick={onClick}>\r\n        Load more\r\n      </button>\r\n    </>\r\n  );\r\n};\r\nexport default Button;\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n","import React, { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Modal.css';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nexport default class Modal extends Component {\r\n  static propTypes = {\r\n    children: PropTypes.any.isRequired,\r\n  };\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  handleBackdropClick = event => {\r\n    if (event.currentTarget === event.target) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return createPortal(\r\n      <div className=\"Overlay\" onClick={this.handleBackdropClick}>\r\n        <div className=\"Modal\">{this.props.children}</div>\r\n      </div>,\r\n      modalRoot,\r\n    );\r\n  }\r\n}\r\n","import { Component } from 'react';\r\n//loader\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport Loader from 'react-loader-spinner';\r\n//gallery ul\r\nimport ImageGallery from '../ImageGallery';\r\n//gallery li\r\nimport ImageGalleryItem from '../ImageGalleryItem';\r\n//api\r\nimport { PixabayFetch } from '../../service/pixabay';\r\n//btn\r\nimport Button from '../Button';\r\n//modal\r\nimport Modal from '../Modal';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst BASE_URL = 'https://pixabay.com/api/';\r\nconst API_KEY = '23189092-912e167e41c5e7d499821c37e';\r\nconst newPixabayFetch = new PixabayFetch(BASE_URL, API_KEY);\r\n\r\nclass ImagesList extends Component {\r\n  state = {\r\n    searchResults: [],\r\n    status: 'idle',\r\n    largeImageId: null,\r\n    isModalOpen: false,\r\n  };\r\n  static propTypes = {\r\n    searchValue: PropTypes.string.isRequired,\r\n  };\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const { searchValue } = this.props;\r\n    if (prevProps.searchValue !== searchValue) {\r\n      console.log('get fetsch');\r\n      this.setState({ status: 'pending' });\r\n      newPixabayFetch.resetPage();\r\n      newPixabayFetch.searchQuery = searchValue;\r\n      newPixabayFetch\r\n        .searchPhotos()\r\n        .then(searchResults => {\r\n          this.setState({ searchResults, status: 'resolved' });\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n          this.setState({ status: 'rejected' });\r\n        });\r\n    }\r\n  }\r\n  handleClick = () => {\r\n    newPixabayFetch.page = 1;\r\n    newPixabayFetch\r\n      .searchPhotos()\r\n      .then(searchResults => {\r\n        this.setState(prev => ({\r\n          searchResults: [...prev.searchResults, ...searchResults],\r\n          status: 'resolved',\r\n        }));\r\n      })\r\n      .then(() => {\r\n        window.scrollTo({\r\n          top: document.documentElement.scrollHeight,\r\n          behavior: 'smooth',\r\n        });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        this.setState({ status: 'rejected' });\r\n      });\r\n  };\r\n\r\n  //find img for modal\r\n  findImg = () => {\r\n    const { searchResults, largeImageId } = this.state;\r\n    const largeImg = searchResults.find(searchResults => {\r\n      return searchResults.id === largeImageId;\r\n    });\r\n    return largeImg;\r\n  };\r\n  openModal = e => {\r\n    this.setState({\r\n      isModalOpen: true,\r\n      largeImageId: Number(e.currentTarget.id),\r\n    });\r\n  };\r\n  closeModal = () => this.setState({ isModalOpen: false });\r\n  //\r\n\r\n  render() {\r\n    const { searchResults, largeImageId, isModalOpen, status } = this.state;\r\n    const { openModal, handleClick, findImg } = this;\r\n\r\n    const paramLoadMore =\r\n      searchResults.length > 0 && searchResults.length >= 12;\r\n\r\n    if (status === 'idle') {\r\n      return (\r\n        <div className=\"container-title\">\r\n          <p>You can find any pictures, photos and images here</p>\r\n        </div>\r\n      );\r\n    }\r\n    if (status === 'pending') {\r\n      return (\r\n        <div className=\"loader\">\r\n          <Loader\r\n            type=\"MutatingDots\"\r\n            color=\"#00BFFF\"\r\n            height={100}\r\n            width={100}\r\n            timeout={3000}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n    if (status === 'rejected') {\r\n      return (\r\n        <div className=\"container-title\">\r\n          <p>Uppps, error</p>\r\n        </div>\r\n      );\r\n    }\r\n    if (status === 'resolved') {\r\n      return (\r\n        <>\r\n          <ImageGallery>\r\n            {searchResults.length > 0 && (\r\n              <ImageGalleryItem\r\n                openModal={openModal}\r\n                searchResults={searchResults}\r\n              />\r\n            )}\r\n          </ImageGallery>\r\n          {paramLoadMore > 0 && <Button onClick={handleClick} />}\r\n          {searchResults.length === 0 && (\r\n            <div className=\"container-title\">\r\n              <p>Sorry, we did not find this</p>\r\n            </div>\r\n          )}\r\n          {isModalOpen && (\r\n            <Modal largeImageId={largeImageId} onClose={this.closeModal}>\r\n              <img src={findImg().largeImageURL} alt={findImg().tags} />\r\n            </Modal>\r\n          )}\r\n        </>\r\n      );\r\n    }\r\n  }\r\n}\r\nexport default ImagesList;\r\n","import React, { Component } from 'react';\n\nimport Searchbar from './Components/Searchbar';\nimport ImagesList from './Components/pixabayGallery';\n\nexport default class App extends Component {\n  state = {\n    searchValue: '',\n  };\n  getSearchValue = searchValue => this.setState({ searchValue });\n\n  render() {\n    return (\n      <div>\n        <Searchbar getSearchValue={this.getSearchValue} />\n        <ImagesList searchValue={this.state.searchValue} />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}